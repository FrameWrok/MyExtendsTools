<%@ CodeTemplate Language="C#" TargetLanguage="Java" Src="" Inherits="" Debug="False" Description="" ResponseEncoding="UTF-8" %>
<%@ Property Name="package" Type="System.String" Default="Che168.Model" Optional="False" Category="Strings" Description="实体类命名空间" %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Optional="False" Category="Configs" Description="源表" %>
<%@ Property Name="SourceTable2" Type="SchemaExplorer.TableSchema"  Optional="True" Category="Configs" Description="字段备注来源表" %>
<%@ Property Name="SourceTable3" Type="SchemaExplorer.TableSchema"  Optional="True" Category="Configs" Description="字段备注来源表" %>
<%@ Property Name="SourceTable4" Type="SchemaExplorer.TableSchema"  Optional="True" Category="Configs" Description="字段备注来源表" %>
<%@ Property Name="QuerySqlScript" Type="StringCollection" Editor="StringCollectionEditor" Category="Configs" Description="查询sql" Optional="True" %>
<%@ Property Name="SourceDatabase" Type="SchemaExplorer.DatabaseSchema" Category="Configs" Optional="True" Description="数据来源为sql查询时需要配置此数据库连接，以便生成查询列" %>
<%@ Property Name="IsSpringBoot" Type="System.Boolean" Category="Configs" Description="是否是SpringBoot bean，如果是，则生成api说明备注" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="System.Data" %>
<%@ Assembly Name="System" %>
<%@ Assembly Name="CodeSmithExtend" Path="../Reference" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Xml" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Threading" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="System.Windows.Forms" %>
<%@ Import Namespace="CodeSmith.BaseTemplates" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Data.Common" %>
<%@ Import Namespace="System.Data.SqlClient" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Collections" %>
<%@ Register Template="../Reference/Extends.cst" Name="ExtendsTools" MergeProperties="True" %>

package <%=package%>import java.util.*;
 <%if(IsSpringBoot){ %>
import io.swagger.annotations.*;
<%} %>

/**
*  <%=SourceTable.Description%>bean
*/
public class <%= SourceTable.Name%>
{	
	<% foreach (ColumnSchema column in SourceTable.Columns) { %>		
	/**<%=  column.Description %>*/
    <%if(IsSpringBoot){ %>
    @ApiModelProperty(value = "<%= column.Description %>", name = "<%= column.Name.ToLower() %>")
    <%} %>
	<%= GetJavaType(column.DataType) %> <%= column.Name.ToLower() %> ;
	<% } %>	
    
    <% foreach (ColumnSchema column in SourceTable.Columns) { %>		
	
	public void set<%=column.Name.ToLower().ToPascalName() %> (<%= GetJavaType(column.DataType) + " "+column.Name.ToLower() %> ) { this.<%= column.Name.ToLower()+" = "+ column.Name.ToLower()%>; }
    
    public <%= GetJavaType(column.DataType) %> get<%=column.Name.ToLower().ToPascalName() %> () { return this.<%= column.Name.ToLower() %>;}
	<% } %>	    
}

<script runat="template">
/// <summary>
    /// 由DbType获取对应的Java 的 Type
    /// </summary>
    /// <param name="dbtype"></param>
    /// <returns></returns>
    public static string GetJavaType(System.Data.DbType dbtype)
    {
        switch (dbtype)
        {
            case DbType.Int16: 
            case DbType.UInt16:
            case DbType.Int32: 
            case DbType.UInt32: return "Integer";
            case DbType.Int64: 
            case DbType.UInt64: return "long";
            case DbType.Byte: return "Integer";
            case DbType.Date:
            case DbType.DateTime:
            case DbType.DateTime2: return "Date";
            case DbType.String:
            case DbType.StringFixedLength:
            case DbType.AnsiString:
            case DbType.AnsiStringFixedLength: return "String";
            case DbType.Decimal: return "BigDecimal";
            case DbType.Double: 
            //case DbType.Currency: return "Double";
            case DbType.Currency: return "BigDecimal";
            default: return "String" ;
        }
    }
</script>